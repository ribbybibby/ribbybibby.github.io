<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ribbybibby</title>
    <link>/</link>
    <description>Recent content on ribbybibby</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 May 2019 18:18:51 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HOW TO: Create a consistent runtime for Terraform with Docker and make</title>
      <link>/posts/consistent-runtime-for-terraform-with-docker-and-make/</link>
      <pubDate>Thu, 02 May 2019 18:18:51 +0100</pubDate>
      
      <guid>/posts/consistent-runtime-for-terraform-with-docker-and-make/</guid>
      <description>Inevitably, when you start using a shared Terraform code base between more than two or three people you have to start introducing measures to ensure consistency of approach across your team.
For instance, how do you make sure everyone is running the same version of Terraform? Or that they’re initializing the backend properly? And if you’re using null_resource resources or provisioner blocks to execute scripts out-of-band, you have to ensure everyone has the right dependencies installed.</description>
    </item>
    
    <item>
      <title>Rob Best | SRE ::: DevOps ::: Systems Admin</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>#!/usr/bin/env:
 go python3 bash  `dpkg &amp;ndash;get-selections`:
 terraform prometheus puppet ELK jenkins  </description>
    </item>
    
  </channel>
</rss>