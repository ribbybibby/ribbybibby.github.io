<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ROB BEST</title>
    <link>https://www.ribbybibby.me/posts/</link>
    <description>Recent content in Posts on ROB BEST</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 10 Dec 2020 18:03:51 +0100</lastBuildDate><atom:link href="https://www.ribbybibby.me/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HOW TO: Unmarshal multiple yaml documents in Go</title>
      <link>https://www.ribbybibby.me/posts/multiple-yaml-documents/</link>
      <pubDate>Thu, 10 Dec 2020 18:03:51 +0100</pubDate>
      
      <guid>https://www.ribbybibby.me/posts/multiple-yaml-documents/</guid>
      <description>The README of the go-yaml package states:
 The yaml package supports most of YAML 1.1 and 1.2, including support for anchors, tags, map merging, etc. Multi-document unmarshalling is not yet implemented
 Nevertheless, multiple yaml documents can be parsed simply and reliably in Go and in this small post I&amp;rsquo;ll demonstrate how.</description>
    </item>
    
    <item>
      <title>HOW TO: Create a consistent runtime for Terraform with Docker and make</title>
      <link>https://www.ribbybibby.me/posts/consistent-runtime-for-terraform-with-docker-and-make/</link>
      <pubDate>Thu, 02 May 2019 18:18:51 +0100</pubDate>
      
      <guid>https://www.ribbybibby.me/posts/consistent-runtime-for-terraform-with-docker-and-make/</guid>
      <description>Inevitably, when you start using a shared Terraform code base between more than two or three people you have to start introducing measures to ensure consistency of approach across your team.
For instance, how do you make sure everyone is running the same version of Terraform? Or that theyâ€™re initializing the backend properly?</description>
    </item>
    
  </channel>
</rss>
